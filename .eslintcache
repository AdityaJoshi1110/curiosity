[{"D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\index.js":"1","D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\serviceWorker.js":"2","D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\App.js":"3","D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\app\\store.js":"4","D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\firebase.js":"5","D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\features\\questionSlice.js":"6","D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\features\\userSlice.js":"7","D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\components\\Curiosity.js":"8","D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\components\\auth\\Login.js":"9","D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\components\\Feed.js":"10","D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\components\\Sidebar.js":"11","D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\components\\QHeader.js":"12","D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\components\\ContactUs.js":"13","D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\components\\Category.js":"14","D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\components\\AboutUs.js":"15","D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\components\\MyQuestions.js":"16","D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\components\\CuriosityBox.js":"17","D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\components\\Post.js":"18","D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\components\\SidebarOptions.js":"19","D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\components\\MyQuestionPost.js":"20","D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\components\\SideBarData.js":"21"},{"size":623,"mtime":1649272765584,"results":"22","hashOfConfig":"23"},{"size":5004,"mtime":1611939480000,"results":"24","hashOfConfig":"23"},{"size":964,"mtime":1635620346756,"results":"25","hashOfConfig":"23"},{"size":266,"mtime":1611939480000,"results":"26","hashOfConfig":"23"},{"size":652,"mtime":1631561337579,"results":"27","hashOfConfig":"23"},{"size":604,"mtime":1611939480000,"results":"28","hashOfConfig":"23"},{"size":440,"mtime":1611939480000,"results":"29","hashOfConfig":"23"},{"size":892,"mtime":1636881216750,"results":"30","hashOfConfig":"23"},{"size":6524,"mtime":1639558016212,"results":"31","hashOfConfig":"23"},{"size":997,"mtime":1636895943287,"results":"32","hashOfConfig":"23"},{"size":228,"mtime":1637333319561,"results":"33","hashOfConfig":"23"},{"size":6397,"mtime":1638460328495,"results":"34","hashOfConfig":"23"},{"size":1756,"mtime":1638299871417,"results":"35","hashOfConfig":"23"},{"size":2065,"mtime":1636880975585,"results":"36","hashOfConfig":"23"},{"size":2544,"mtime":1673441844627,"results":"37","hashOfConfig":"23"},{"size":1222,"mtime":1636896253902,"results":"38","hashOfConfig":"23"},{"size":906,"mtime":1635099432333,"results":"39","hashOfConfig":"23"},{"size":6707,"mtime":1638459819921,"results":"40","hashOfConfig":"23"},{"size":1061,"mtime":1645088745275,"results":"41","hashOfConfig":"23"},{"size":7184,"mtime":1638460145228,"results":"42","hashOfConfig":"23"},{"size":734,"mtime":1636895458017,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1pdrar9",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\index.js",[],["93","94"],"D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\serviceWorker.js",[],"D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\App.js",[],"D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\app\\store.js",[],"D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\firebase.js",[],"D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\features\\questionSlice.js",[],"D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\features\\userSlice.js",[],"D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\components\\Curiosity.js",[],"D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\components\\auth\\Login.js",["95","96","97","98","99"],"import React, { useState } from \"react\";\nimport \"./Login.css\";\nimport validator from 'validator';\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport { auth, provider } from \"../../firebase\";\nimport { Avatar, Button, Input } from \"@material-ui/core\";\nimport db from \"../../firebase\";\nimport Modal from \"react-modal\";\nModal.setAppElement(\"#root\");\nfunction Login() {\n  const [IsmodalOpen, setIsModalOpen] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [remail, setREmail] = useState('');\n  const [rpassword, setRPassword] = useState('');\n  const [name, setName] = useState('');\n \n  \n\n  var a=\"Save\";\n  const signIn = () => {\n    auth.signInWithPopup(provider).catch((e) => {\n      alert(e.message);\n    });\n  };\n\n  const handleSignIn = (e) => {\n    e.preventDefault();\n\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .then((auth) => {\n        console.log(auth);\n      })\n      .catch((e) => alert(e.message));\n  };\n  const handleCancel=()=>{\n    setIsModalOpen(false);\n    \n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(name.length>8);\n    var trim_name= name.replace(\" \",\"\");\n    console.log(trim_name);\n    if(name==='' || remail === '' || rpassword === '') {\n      alert(\"Please Enter all the Fields\");\n    } \n    else if(!(name.length>8 && name.length<25)){\n      alert(\"Enter a valid name of length bewteen 8 and 25\");\n    }\n    else if (!validator.isEmail(remail)) {\n      alert('Enter valid Email!');\n    } \n    else if(!validator.isAlpha(trim_name)){\n           alert(\"Enter a valid name\");\n    }\n    else if(!validator.isStrongPassword(rpassword)){\n      alert(\"Enter a valid password\");\n    }\n    else {\n     \n\n    auth\n      .createUserWithEmailAndPassword(remail, rpassword)\n      .then((auth) => {\n        if (auth) {\n          console.log(auth);\n          db.collection(\"User\").add({\n            email:remail,\n            password:rpassword,\n            notification: a,\n            name:name,\n          });\n        }\n      })\n      .catch((e) => alert(e.message));\n      \n    }\n  };\n\n  return (\n    <div className=\"login\">\n      <div className=\"login__container\">\n        <div className=\"login__logo\">\n          <div className=\"project-name\">\n        CURIOSITY\n        </div>\n          </div>\n        <div className=\"login__desc\">\n          <h3></h3>\n        </div>\n        \n        <div className=\"login__auth\">\n          \n          <div className=\"login__authOptions\">\n          <div className=\"login__authDesc\">\n              <p>\n                <span style={{ color: \"orangered\", cursor: \"pointer\" }}>\n                  \n                </span>\n                <span style={{ color: \"orangered\", cursor: \"pointer\" }}>\n                  &nbsp; \n                </span>\n                \n                <span style={{ color: \"orangered\", cursor: \"pointer\" }}>\n                  \n                </span>\n                \n              </p>\n            </div>\n            <div className=\"login__authOption\">\n              <img\n                className=\"login__googleAuth\"\n                src=\"https://media-public.canva.com/MADnBiAubGA/3/screen.svg\"\n                alt=\"\"\n              />\n             \n              \n              <p onClick={signIn}>Continue With Google</p>\n            </div>\n            \n            \n          </div>\n          <div className=\"login__emailPass\">\n          \n            <div className=\"login__label\">\n            <h2 class=\"neonText\"> <div class =\"Login\">\n            \n            \n           <h1>LOGIN</h1>\n            \n            \n            </div></h2> \n\n            </div>\n            <div className=\"login__inputFields\">\n              <div className=\"login__inputField\">\n                <input\n                  value={email} class=\"P\"\n                  onChange={(e) => setEmail(e.target.value)}\n                  type=\"text\"\n                  placeholder=\"Email\"\n                />\n              </div>\n              <div className=\"login__inputField\">\n                <input\n                  value={password} class =\"P\"\n                  onChange={(e) => setPassword(e.target.value)}\n                  type=\"password\"\n                  placeholder=\"Password\"\n                />\n              </div>\n            </div>\n            <div className=\"login__forgButt\">\n              <small>Forgot Password?</small>\n              <button onClick={handleSignIn}>Login</button>\n            </div>\n\n            \n            \n\n            <button onClick={() => setIsModalOpen(true)}>Register</button>\n            <Modal\n          isOpen={IsmodalOpen}\n          onRequestClose={() => setIsModalOpen(false)}\n          shouldCloseOnOverlayClick={false}\n          style={{\n            overlay: {\n              width: 700,\n              height: 600,\n              backgroundColor: \"rgba(0,0,0,0.8)\",\n              zIndex: \"1000\",\n              top: \"50%\",\n              left: \"50%\",\n              marginTop: \"-300px\",\n              marginLeft: \"-350px\",\n            },\n          }}\n        >\n         \n          <div className=\"modal__title\">\n            <h5>Register</h5>\n          </div>\n\n          <form>\n       \n        <label className=\"label\">Name</label>\n        <span className=\"tab\"></span>\n        <input  onChange={(e) => setName(e.target.value)} className=\"input\" \n        value={name} type=\"text\" />\n        <br></br>\n        <br></br>\n        <label  className=\"label\">Email</label>\n        <span className=\"tab2\"></span>\n        <input onChange={(e) => setREmail(e.target.value)} className=\"input\" \n          value={remail} type=\"email\" />\n          <br></br>\n          <br></br>\n        <label className=\"label\">Password</label>\n        <span className=\"tab3\"></span>\n        <input onChange={(e) => setRPassword(e.target.value)} className=\"input\" \n          value={rpassword} type=\"password\" />\n        <br></br>\n        \n      \n        \n          <div className=\"modal__buttons_Login\">\n            <button className=\"cancle_Login\" onClick={handleCancel}>\n              Cancel\n            </button>\n            <button type=\"submit\" onClick={handleSubmit} className=\"register_Login\" >\n              Register\n            </button>\n          </div>\n          </form>\n        </Modal>\n          </div>\n        </div>\n        <div className=\"login__lang\">\n          <p>WELCOME</p>\n\n        </div>\n        <div className=\"login__footer\">\n          \n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;","D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\components\\Feed.js",[],"D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\components\\Sidebar.js",[],"D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\components\\QHeader.js",["100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117"],"import React, { useEffect, useState } from \"react\";\nimport PeopleAltOutlinedIcon from \"@material-ui/icons/PeopleAltOutlined\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport LanguageIcon from \"@material-ui/icons/Language\";\nimport { Home, LocationOn, Notifications } from '@material-ui/icons';\nimport Modal from \"react-modal\";\nimport Select from \"react-select\";\nimport \"./QHeader.css\";\nimport { Avatar, Button, Input } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nimport db, { auth } from \"../firebase\";\nimport { ExpandMore, Link } from \"@material-ui/icons\";\nimport firebase from \"firebase\";\nimport {Dropdown} from 'react-bootstrap';\n\nModal.setAppElement(\"#root\");\n\nfunction QHeader() {\n  const user = useSelector(selectUser);\n\n  const [IsmodalOpen, setIsModalOpen] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const [inputUrl, setInputUrl] = useState(\"\");\n  const questionName = input;\n  const [not,setNotifications]=useState(\"Save\");\n   var b;\n   var a;\n  useEffect(() => {\n    db.collection(\"User\").where(\"email\",\"==\",user.email)\n      .onSnapshot((snapshot) =>                                     \n        setNotifications(                                                      \n          snapshot.docs.map((doc) => ({\n            Uid: doc.id,\n            Uemails: doc.data(),\n          }))\n        )\n      );\n  }, []);\n   \n\n  var categoryList=[\n    {\n      value:1,\n      label:\"General\"\n    },\n    {\n      value:2,\n      label:\"Business\"\n    },\n    {\n      value:3,\n      label:\"Computer Science\"\n    },\n    {\n      value:4,\n      label:\"Music\"\n    },\n    {\n      value:5,\n      label:\"Science\"\n    },\n    {\n      value:6,\n      label:\"Health\"\n    },\n    {\n      value:7,\n      label:\"Movies\"\n    },\n    {\n      value:8,\n      label:\"Technology\"\n    },\n    {\n      value:9,\n      label:\"Education\"\n    }\n  ];\n  const[category,catValue]=useState(categoryList.label);\n  const catHandler=e=>{\n    if(e!=\"\" || e!=null)\n    {\n      catValue(e.label);\n    }\n     \n  }\n  \n  const getNotification=()=>{\n    console.log(\"Hello\");\n    not.map(({Uid,Uemails})=>{\n     \n    });\n  }\n\n  const handleCancel=()=>{\n    setIsModalOpen(false);\n    setInput(\"\");\n    setInputUrl(\"\");\n  }\n  const handleQuestion = (e) => {\n    if(input==\"\" || category==\"\" || category==null)\n    {\n       alert(\"Invalid Field\");\n       \n    }\n    else\n    {\n      setIsModalOpen(false);\n      e.preventDefault();\n      // setIsModalOpen(false);\n   \n       if (questionName) {\n         db.collection(\"questions\").add({\n           user: user,\n           question: input,\n           imageUrl: inputUrl,\n           category:category,\n           timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n           likes:0,\n           dislikes:0,\n         });\n    }\n   \n      \n    }\n\n    setInput(\"\");\n    setInputUrl(\"\");\n  };\n\n  return (\n    <div className=\"QHeader\">\n      <div className=\"QHeader__logo2\">\n       \n        <img src=\"https://mms.businesswire.com/media/20210823005374/en/901163/22/Curiosity_Wordmark_Color_Pos.jpg\"></img>\n     \n      </div>\n      <div className=\"QHeader__logo1\">\n       \n        <img src=\"https://motivatedandfree.files.wordpress.com/2020/05/ssizq5my0eba5y3r2m.gif\"></img>\n     \n      </div>\n      \n      \n        \n\n      <div className=\"QHeader__Rem\">\n        <div className=\"QHeader__avatar\">\n          <Avatar\n            onClick={() => auth.signOut()}\n            className=\"Avatar\"\n            src={\n              user.photo\n                ? user.photo\n                : \"\"\n            }\n          />\n        </div>\n        \n        {/*\n         <div classname=\"notification\">\n         <Dropdown  onClick={getNotification} >\n        <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n        <Notifications />\n        \n   \n </Dropdown.Toggle>\n  <Dropdown.Menu >\n    <Dropdown.Item href=\"#/action-1\"> </Dropdown.Item>\n    <Dropdown.Item href=\"#/action-2\">{a}</Dropdown.Item>\n    <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\n  </Dropdown.Menu>\n        </Dropdown>\n       </div>\n        */}\n        <Button onClick={() => setIsModalOpen(true)}>Add Question</Button>\n        <Modal\n          isOpen={IsmodalOpen}\n          onRequestClose={() => setIsModalOpen(false)}\n          shouldCloseOnOverlayClick={false}\n          style={{\n            overlay: {\n              width: 700,\n              height: 600,\n              backgroundColor: \"rgba(0,0,0,0.8)\",\n              zIndex: \"1000\",\n              top: \"50%\",\n              left: \"50%\",\n              marginTop: \"-300px\",\n              marginLeft: \"-350px\",\n            },\n          }}\n        >\n          <div className=\"modal__title\">\n            <h5>Add Question</h5>\n          </div>\n          <div className=\"modal__info\">\n            <Avatar\n              className=\"avatar\"\n              src={\n                user.photo\n                  ? user.photo\n                  : \"\"\n              }\n            />\n            <p>{user.disPlayName ? user.disPlayName : user.email} asked</p>\n            <div className=\"modal__scope\">\n              \n              \n              \n            </div>\n          </div>\n          <div className=\"modal__Field\">\n            <Input\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              type=\"text\"\n              placeholder=\"Start your question with 'What', 'How', 'Why', etc. \"\n            />\n            <div className=\"modal__fieldLink\">\n              <Link />\n              <input\n                value={inputUrl}\n                onChange={(e) => setInputUrl(e.target.value)}\n                type=\"text\"\n                placeholder=\"Optional: inclue a link that gives context\"\n              ></input>\n            </div>\n            <div className=\"modal_category1\">\n            <div class=\"category-content\">\n            <Select options={categoryList}  onChange={catHandler} required>\n            </Select>\n            </div>\n            </div>\n          </div>\n          <div className=\"modal__buttons\">\n            <button className=\"cancle\" onClick={handleCancel}>\n              Cancel\n            </button>\n            <button type=\"sumbit\" onClick={handleQuestion} className=\"add\" >\n              Add Question\n            </button>\n          </div>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n\nexport default QHeader;","D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\components\\ContactUs.js",["118","119","120","121"],"import React, { useState, useEffect } from \"react\";\r\nimport { selectUser } from \"../features/userSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport db from \"../firebase\";\r\nimport \"./ContactUs.css\";\r\nconst ContactUs = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n  var dname= user.displayName ? user.displayName : user.email;\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoader(true);\r\n\r\n    db.collection(\"contacts\")\r\n      .add({\r\n        name: dname,\r\n        email: user.email,\r\n        message: message,\r\n        mail:false,\r\n      })\r\n      .then(() => {\r\n        setLoader(false);\r\n        alert(\"Your message has been submitted👍\");\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n        setLoader(false);\r\n      });\r\n\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={handleSubmit}>\r\n      <h1>Contact Us 🤳</h1>\r\n\r\n      <label>Name</label>\r\n       <div className=\"d\">{user.displayName ? user.displayName : user.email}</div>\r\n\r\n      <label>Email</label>\r\n      <div className=\"d\">{ user.email}</div>\r\n\r\n      <label>Message</label>\r\n      <textarea\r\n        placeholder=\"Message\"\r\n        value={message}\r\n        onChange={(e) => setMessage(e.target.value)} required\r\n      ></textarea>\r\n\r\n      <button\r\n        type=\"submit\"\r\n        style={{ background: loader ? \"#ccc\" : \" rgb(2, 2, 110)\" }}\r\n      >\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactUs;","D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\components\\Category.js",["122","123","124"],"import Select from \"react-select\";\r\nimport {Container,Col,Row} from 'react-bootstrap';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport CuriosityBox from \"./CuriosityBox\";\r\nimport Post from \"./Post\";\r\nimport db from \"../firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../features/userSlice\";\r\nimport \"./Category.css\"\r\nfunction Category() {\r\n\r\n  var categoryList=[\r\n    {\r\n      value:1,\r\n      label:\"General\"\r\n    },\r\n    {\r\n      value:2,\r\n      label:\"Business\"\r\n    },\r\n    {\r\n      value:3,\r\n      label:\"Computer Science\"\r\n    },\r\n    {\r\n      value:4,\r\n      label:\"Music\"\r\n    },\r\n    {\r\n      value:5,\r\n      label:\"Science\"\r\n    },\r\n    {\r\n      value:6,\r\n      label:\"Health\"\r\n    },\r\n    {\r\n      value:7,\r\n      label:\"Movies\"\r\n    },\r\n    {\r\n      value:8,\r\n      label:\"Technology\"\r\n    },\r\n    {\r\n      value:9,\r\n      label:\"Education\"\r\n    }\r\n  ];\r\n  const[category,catValue]=useState(\"General\");\r\n  const [posts, setPosts] = useState([]);\r\n  const user = useSelector(selectUser);\r\n  useEffect(() => {\r\n    if(user.uid){\r\n    db.collection(\"questions\").where(\"category\",\"==\",category)\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .onSnapshot((snapshot) =>\r\n        setPosts(\r\n          snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            questions: doc.data(),\r\n          }))\r\n        )\r\n      );}\r\n  }, [user.uid,category]);\r\n \r\n  const catHandler=e=>{\r\n     catValue(e.label);\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n  \r\n   <div className=\"modal_category\">\r\n   <Select options={categoryList}  onChange={catHandler}>\r\n            </Select>\r\n    \r\n    </div>\r\n    <div className=\"category\">\r\n      <CuriosityBox />\r\n      {\r\n          \r\n          posts.map(({ id, questions }) => (\r\n        <Post\r\n          key={id}\r\n          Id={id}\r\n          question={questions.question}\r\n          imageUrl={questions.imageUrl}\r\n          timestamp={questions.timestamp}\r\n          users={questions.user}\r\n          \r\n        />\r\n      ))}    \r\n      </div> \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Category;","D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\components\\AboutUs.js",[],"D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\components\\MyQuestions.js",[],"D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\components\\CuriosityBox.js",[],"D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\components\\Post.js",["125","126","127"],"import { Avatar } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Post.css\";\nimport ArrowUpwardOutlinedIcon from \"@material-ui/icons/ArrowUpwardOutlined\";\nimport ArrowDownwardOutlinedIcon from \"@material-ui/icons/ArrowDownwardOutlined\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nimport Modal from \"react-modal\";\nimport db from \"../firebase\";\nimport { selectQuestionId, setQuestionInfo } from \"../features/questionSlice\";\nimport firebase from \"firebase\";\nimport { deepOrange } from \"@material-ui/core/colors\";\n\nfunction Post({ Id, question, imageUrl, timestamp, users }) {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  var a=0;\n  const [IsmodalOpen, setIsModalOpen] = useState(false);\n  const questionId = useSelector(selectQuestionId);\n  const [answer, setAnswer] = useState(\"\");\n  const [getAnswers, setGetAnswers] = useState([]);\n  const [likes, setLikes] = useState(\"\");\n  const [dislikes, setDislikes] = useState(\"\");\n  useEffect(() => {\n    if (questionId) {\n      db.collection(\"questions\")\n        .doc(questionId)\n        .collection(\"answer\")\n        .orderBy(\"timestamp\", \"desc\")\n        .onSnapshot((snapshot) =>\n          setGetAnswers(\n            snapshot.docs.map((doc) => ({ id: doc.id, answers: doc.data() }))\n          )\n        );\n    }\n  }, [questionId]);\n\n  const handleLikes=()=>{\n    dispatch(\n    setQuestionInfo({\n      questionId: Id,\n      questionName: question,\n    })\n  )\n  \n     a=db.collection(\"questions\").doc(questionId);  \n     a.update({\n       likes: firebase.firestore.FieldValue.increment(1)\n     });\n }\n const handleDislikes=()=>{\n  dispatch(\n    setQuestionInfo({\n      questionId: Id,\n      questionName: question,\n    })\n  )\n  \n     a=db.collection(\"questions\").doc(questionId);  \n     a.update({\n       dislikes: firebase.firestore.FieldValue.increment(1)\n     });\n }\n\n  const handleAnswer = (e) => {\n    e.preventDefault();\n\n    if(answer==\"\")\n    {\n      alert(\"Invalid Field\");\n    }\n    else\n    {\n      if (questionId) {\n        db.collection(\"questions\").doc(questionId).collection(\"answer\").add({\n          user: user,\n          answer: answer,\n          questionId: questionId,\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        });\n      }\n      console.log(questionId);\n      \n      setIsModalOpen(false);\n    }\n\n    setAnswer(\"\");\n  };\n  return (\n    <div\n      className=\"post\"\n      onClick={() =>\n        dispatch(\n          setQuestionInfo({\n            questionId: Id,\n            questionName: question,\n          })\n        )\n      }\n    >\n      <div className=\"post__info\">\n        <Avatar\n          src={\n            users.photo\n              ? users.photo\n              : users.email.substr(0,1)\n          }\n          sx={{ bgcolor: deepOrange[500] }}\n        >  {users.email.substr(0,1).toUpperCase()}\n\n          </Avatar>\n        <h4>{users.displayName ? users.displayName : users.email}</h4>\n        <small>{new Date(timestamp?.toDate()).toLocaleString()}</small>\n      </div>\n      <div className=\"post__body\">\n        <div className=\"post_question\">\n          <p>{question}</p>\n          <button\n            onClick={() => setIsModalOpen(true)}\n            className=\"post_btnAnswer\"\n          >\n            \n            Answer\n          </button>\n          <Modal\n            isOpen={IsmodalOpen}\n            onRequestClose={() => setIsModalOpen(false)}\n            shouldCloseOnOverlayClick={false}\n            style={{\n              overlay: {\n                width: 680,\n                height: 550,\n                backgroundColor: \"rgba(0,0,0,0.8)\",\n                zIndex: \"1000\",\n                top: \"50%\",\n                left: \"50%\",\n                marginTop: \"-250px\",\n                marginLeft: \"-350px\",\n              },\n            }}\n          >\n            <div className=\"modal__question\">\n              <h1>{question}</h1>\n              <p>\n                asked by{\" \"}\n                <span className=\"name\">\n                  {users.displayName ? users.displayName : users.email}\n                </span>{\" \"}\n                {\"\"}\n                on{\" \"}\n                <span className=\"name\">\n                  {new Date(timestamp?.toDate()).toLocaleString()}\n                </span>\n              </p>\n            </div>\n            <div className=\"modal__answer\">\n              <textarea\n                value={answer}\n                onChange={(e) => setAnswer(e.target.value)}\n                placeholder=\"Enter Your Answer\"\n                type=\"text\"\n              />\n            </div>\n            <div className=\"modal__button\">\n              <button className=\"cancle\" onClick={() => setIsModalOpen(false)}>\n                Cancel\n              </button>\n              <button type=\"sumbit\" onClick={handleAnswer} className=\"add\">\n                Add Answer\n              </button>\n            </div>\n          </Modal>\n        </div>\n        <img src={imageUrl} alt=\"\" />\n        <div className=\"post_answer\">\n          {getAnswers.map(({ id, answers }) => (\n            <p key={id} style={{ position: \"relative\", paddingBottom: \"5px\" }}>\n              {Id === answers.questionId ? (\n                <span>\n                  {answers.answer}\n                  <br />\n                  <span\n                    style={{\n                      position: \"absolute\",\n                      color: \"gray\",\n                      fontSize: \"small\",\n                      display: \"flex\",\n                      right: \"0px\",\n                    }}\n                  >\n                    <span style={{ color: \"#b92b27\" }}>\n                      {answers.user.displayName\n                        ? answers.user.displayName\n                        : answers.user.email}{\" \"}\n                      on{\" \"}\n                      {new Date(answers.timestamp?.toDate()).toLocaleString()}\n                    </span>\n                  </span>\n                </span>\n              ) : (\n                \"\"\n              )}\n            </p>\n          ))}\n        </div>\n        \n      </div>\n      <div className=\"post__footer\">\n        <div className=\"post__footerAction\">\n          \n        <h4>{likes}</h4><br></br>\n                <button className=\"likes_button\" onDoubleClick={handleLikes}>  <ArrowUpwardOutlinedIcon /> </button>\n                <h4>{dislikes}</h4><br></br>\n          <button className=\"likes_button\" onDoubleClick={handleDislikes}><ArrowDownwardOutlinedIcon /></button>\n        </div>\n\n        \n        <div className=\"post__footerLeft\">\n          \n          \n\n\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Post;","D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\components\\SidebarOptions.js",["128"],"import React, { useState } from 'react';\nimport * as AiIcons from 'react-icons/ai';\n\nimport { Link } from 'react-router-dom';\nimport { IconContext } from 'react-icons';\n\nimport \"./SidebarOption.css\";\nimport {SideBarData} from \"./SideBarData.js\"\nfunction SidebarOptions() {\n\n \n  const [sidebar] = useState(true);\n \n  return (\n  <>\n     <IconContext.Provider value={{ color: '#fff', size: '25px' }}>\n \n    <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\n      <ul className='nav-menu-items' >\n     \n    <div className=\"sidebarOptions\">\n      <div className=\"sidebarOption\">\n      \n       {SideBarData.map((item, index) => {\n          \n           return (\n                <li key={index} className={item.cName}>\n                  <Link to={item.path}>\n                    {item.icon}\n                    <span>{item.title}</span>\n                  </Link>\n                </li>\n              );\n           \n            })}\n        \n    </div>\n    </div>\n    </ul> \n     </nav>\n      </IconContext.Provider>\n    </>\n  );\n}\n\nexport default SidebarOptions;","D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\components\\MyQuestionPost.js",[],"D:\\Important files\\Aditya\\btech\\major\\quora-clone-master\\src\\components\\SideBarData.js",[],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":4,"column":8,"nodeType":"135","messageId":"136","endLine":4,"endColumn":27},{"ruleId":"133","severity":1,"message":"137","line":6,"column":10,"nodeType":"135","messageId":"136","endLine":6,"endColumn":16},{"ruleId":"133","severity":1,"message":"138","line":6,"column":18,"nodeType":"135","messageId":"136","endLine":6,"endColumn":24},{"ruleId":"133","severity":1,"message":"139","line":6,"column":26,"nodeType":"135","messageId":"136","endLine":6,"endColumn":31},{"ruleId":"140","severity":1,"message":"141","line":92,"column":11,"nodeType":"142","endLine":92,"endColumn":15},{"ruleId":"133","severity":1,"message":"143","line":2,"column":8,"nodeType":"135","messageId":"136","endLine":2,"endColumn":29},{"ruleId":"133","severity":1,"message":"144","line":3,"column":8,"nodeType":"135","messageId":"136","endLine":3,"endColumn":18},{"ruleId":"133","severity":1,"message":"145","line":4,"column":8,"nodeType":"135","messageId":"136","endLine":4,"endColumn":20},{"ruleId":"133","severity":1,"message":"146","line":5,"column":10,"nodeType":"135","messageId":"136","endLine":5,"endColumn":14},{"ruleId":"133","severity":1,"message":"147","line":5,"column":16,"nodeType":"135","messageId":"136","endLine":5,"endColumn":26},{"ruleId":"133","severity":1,"message":"148","line":5,"column":28,"nodeType":"135","messageId":"136","endLine":5,"endColumn":41},{"ruleId":"133","severity":1,"message":"149","line":13,"column":10,"nodeType":"135","messageId":"136","endLine":13,"endColumn":20},{"ruleId":"133","severity":1,"message":"150","line":15,"column":9,"nodeType":"135","messageId":"136","endLine":15,"endColumn":17},{"ruleId":"133","severity":1,"message":"151","line":27,"column":8,"nodeType":"135","messageId":"136","endLine":27,"endColumn":9},{"ruleId":"133","severity":1,"message":"152","line":28,"column":8,"nodeType":"135","messageId":"136","endLine":28,"endColumn":9},{"ruleId":"153","severity":1,"message":"154","line":39,"column":6,"nodeType":"155","endLine":39,"endColumn":8,"suggestions":"156"},{"ruleId":"157","severity":1,"message":"158","line":82,"column":9,"nodeType":"159","messageId":"160","endLine":82,"endColumn":11},{"ruleId":"133","severity":1,"message":"161","line":89,"column":9,"nodeType":"135","messageId":"136","endLine":89,"endColumn":24},{"ruleId":"162","severity":1,"message":"163","line":91,"column":28,"nodeType":"164","messageId":"165","endLine":91,"endColumn":30},{"ruleId":"157","severity":1,"message":"166","line":102,"column":13,"nodeType":"159","messageId":"160","endLine":102,"endColumn":15},{"ruleId":"157","severity":1,"message":"166","line":102,"column":29,"nodeType":"159","messageId":"160","endLine":102,"endColumn":31},{"ruleId":"167","severity":1,"message":"168","line":136,"column":9,"nodeType":"142","endLine":136,"endColumn":116},{"ruleId":"167","severity":1,"message":"168","line":141,"column":9,"nodeType":"142","endLine":141,"endColumn":96},{"ruleId":"133","severity":1,"message":"169","line":1,"column":27,"nodeType":"135","messageId":"136","endLine":1,"endColumn":36},{"ruleId":"133","severity":1,"message":"170","line":7,"column":10,"nodeType":"135","messageId":"136","endLine":7,"endColumn":14},{"ruleId":"133","severity":1,"message":"171","line":8,"column":10,"nodeType":"135","messageId":"136","endLine":8,"endColumn":15},{"ruleId":"133","severity":1,"message":"172","line":11,"column":9,"nodeType":"135","messageId":"136","endLine":11,"endColumn":17},{"ruleId":"133","severity":1,"message":"173","line":2,"column":9,"nodeType":"135","messageId":"136","endLine":2,"endColumn":18},{"ruleId":"133","severity":1,"message":"174","line":2,"column":19,"nodeType":"135","messageId":"136","endLine":2,"endColumn":22},{"ruleId":"133","severity":1,"message":"175","line":2,"column":23,"nodeType":"135","messageId":"136","endLine":2,"endColumn":26},{"ruleId":"133","severity":1,"message":"176","line":22,"column":17,"nodeType":"135","messageId":"136","endLine":22,"endColumn":25},{"ruleId":"133","severity":1,"message":"177","line":23,"column":20,"nodeType":"135","messageId":"136","endLine":23,"endColumn":31},{"ruleId":"157","severity":1,"message":"166","line":68,"column":14,"nodeType":"159","messageId":"160","endLine":68,"endColumn":16},{"ruleId":"133","severity":1,"message":"178","line":2,"column":13,"nodeType":"135","messageId":"136","endLine":2,"endColumn":20},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'ArrowForwardIosIcon' is defined but never used.","Identifier","unusedVar","'Avatar' is defined but never used.","'Button' is defined but never used.","'Input' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'PeopleAltOutlinedIcon' is defined but never used.","'SearchIcon' is defined but never used.","'LanguageIcon' is defined but never used.","'Home' is defined but never used.","'LocationOn' is defined but never used.","'Notifications' is defined but never used.","'ExpandMore' is defined but never used.","'Dropdown' is defined but never used.","'b' is defined but never used.","'a' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.email'. Either include it or remove the dependency array.","ArrayExpression",["181"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'getNotification' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Expected '===' and instead saw '=='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useEffect' is defined but never used.","'name' is assigned a value but never used.","'email' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'Container' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'setLikes' is assigned a value but never used.","'setDislikes' is assigned a value but never used.","'AiIcons' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},"Update the dependencies array to be: [user.email]",{"range":"184","text":"185"},[1422,1424],"[user.email]"]